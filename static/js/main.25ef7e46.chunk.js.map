{"version":3,"sources":["../node_modules/iota.lib.js/lib/utils sync","LedgerTrampoline.jsx","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","LedgerTrampoline","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","registerEventListener","bind","assertThisInitialized","initLedger","getNewAddress","sendMessageToExtension","path","_this2","window","addEventListener","data","target","console","log","action","replyAction","params","success","payload","TransportU2F","create","transport","iota","Iota","_context","t0","message","setActiveSeed","address","_context2","msg","parent","postMessage","React","Component","ReactDOM","render","react_default","a","createElement","src_LedgerTrampoline","document","getElementById"],"mappings":"2EAAA,SAAAA,EAAAC,GACA,IAAAC,EAAA,IAAAC,MAAA,uBAAAF,EAAA,KAEA,MADAC,EAAAE,KAAA,mBACAF,EAEAF,EAAAK,KAAA,WAAuC,UACvCL,EAAAM,QAAAN,EACAO,EAAAC,QAAAR,EACAA,EAAAS,GAAA,6LC+EeC,cAjFb,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QACKI,sBAAwBP,EAAKO,sBAAsBC,KAA3BP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAC7BA,EAAKU,WAAaV,EAAKU,WAAWF,KAAhBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAClBA,EAAKW,cAAgBX,EAAKW,cAAcH,KAAnBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACrBA,EAAKY,uBAAyBZ,EAAKY,uBAAuBJ,KAA5BP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAC9BA,EAAKO,wBAELP,EAAKa,KAAO,kBARAb,uFAWU,IAAAc,EAAAX,KACtBY,OAAOC,iBAAiB,UAAW,SAAAzB,GACjC,GAAIA,GAAKA,EAAE0B,MAA0B,kBAAlB1B,EAAE0B,KAAKC,OAA4B,CACpDC,QAAQC,IAAI7B,GACZ,IAAM8B,EAAS9B,EAAE0B,KAAKI,OAGhBC,GAFS/B,EAAE0B,KAAKM,OAEFF,EAAS,UAC7B,OAAQA,GACN,IAAK,cAGL,IAAK,qBACHP,EAAKJ,WAAWY,GAChB,MACF,QACER,EAAKF,uBAAuB,CAC1BS,OAAQC,EACRE,SAAS,EACTC,QAAS,WAIhB,8EAGYH,kGAEWI,IAAaC,gBAA/BC,SACNzB,KAAK0B,KAAO,IAAIC,IAAKF,GACrBzB,KAAKS,uBAAuB,CAC1BS,OAAQC,EACRE,SAAS,EACTC,QAAS,uDAGXtB,KAAKS,uBAAuB,CAC1BS,OAAQC,EACRE,SAAS,EACTC,QAASM,EAAAC,GAAEC,oMAKGX,kGAEMnB,KAAK0B,KAAKK,cAAc/B,KAAKU,aAA7CsB,SACNhC,KAAKS,uBAAuB,CAC1BS,OAAQC,EACRE,SAAS,EACTC,QAASU,oDAGXhC,KAAKS,uBAAuB,CAC1BS,OAAQC,EACRE,SAAS,EACTC,QAAOW,EAAAJ,gKAKUK,GACrBtB,OAAOuB,OAAOC,YAAYF,EAAK,sCAI/B,OAAO,YA/EoBG,IAAMC,WCArCC,IAASC,OACLC,EAAAC,EAAAC,cAACC,EAAD,MACFC,SAASC,eAAe","file":"static/js/main.25ef7e46.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 190;","import React from 'react'\nimport TransportU2F from \"@ledgerhq/hw-transport-u2f\"\nimport Iota from 'hw-app-iota'\n\nclass LedgerTrampoline extends React.Component {\n\n  constructor() {\n    super()\n    this.registerEventListener = this.registerEventListener.bind(this)\n    this.initLedger = this.initLedger.bind(this)\n    this.getNewAddress = this.getNewAddress.bind(this)\n    this.sendMessageToExtension = this.sendMessageToExtension.bind(this)\n    this.registerEventListener()\n\n    this.path = \"44'/4218'/0'/0'\"\n  }\n\n  registerEventListener() {\n    window.addEventListener('message', e => {\n      if (e && e.data && e.data.target === 'ledger-iframe') {\n        console.log(e)\n        const action = e.data.action\n        const params = e.data.params\n\n        const replyAction = action + '-reply'\n        switch (action) {\n          case 'ledger-init': \n            this.initLedger(replyAction)\n            break\n          case 'ledger-new-address': \n            this.initLedger(replyAction)\n            break\n          default:\n            this.sendMessageToExtension({\n              action: replyAction,\n              success: false,\n              payload: null\n            })\n        }\n      }\n    }, false)\n  }\n\n  async initLedger(replyAction){\n    try {\n      const transport = await TransportU2F.create()\n      this.iota = new Iota(transport)\n      this.sendMessageToExtension({\n        action: replyAction,\n        success: true,\n        payload: null\n      })\n    } catch (e) {\n      this.sendMessageToExtension({\n        action: replyAction,\n        success: false,\n        payload: e.message\n      })\n    }\n  }\n\n  async getNewAddress(replyAction) {\n    try {\n      const address = await this.iota.setActiveSeed(this.path)\n      this.sendMessageToExtension({\n        action: replyAction,\n        success: true,\n        payload: address\n      })\n    } catch(e) {\n      this.sendMessageToExtension({\n        action: replyAction,\n        success: false,\n        payload: e\n      })\n    }\n  }\n\n  sendMessageToExtension(msg) {\n    window.parent.postMessage(msg, '*')\n  }\n\n  render() {\n    return null\n  }\n}\n\nexport default LedgerTrampoline","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport LedgerTrampoline from './LedgerTrampoline'\n\nReactDOM.render(\n    <LedgerTrampoline/>,\n  document.getElementById('root')\n)"],"sourceRoot":""}